name: "release-app"
on:
  push: 
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release-desktop-apps:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-2019, macos-11, ubuntu-22.04]
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Support longpaths
        if: matrix.platform != 'ubuntu-22.04'
        run: git config --system core.longpaths true

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks out a copy of your repository on the ubuntu-latest machine
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
        
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable
          targets: ${{ matrix.platform == 'macos-11' && 'aarch64-apple-darwin,x86_64-apple-darwin,wasm32-unknown-unknown' || 'wasm32-unknown-unknown' }}

      - name: install Go stable
        uses: actions/setup-go@v4
        with:
          go-version: "stable"

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install and prepare
        run: |
          npm i
          npm run package

      - name: build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Forum v__VERSION__"
          releaseBody: "See assets below to download and install this version."
          releaseDraft: true
          prerelease: true

  release-android-app:
    strategy:
      fail-fast: true

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main

      - name: Install nix
        uses: cachix/install-nix-action@v25
        with:
          install_url: https://releases.nixos.org/nix/nix-2.20.0/install
          extra_nix_config: |
            experimental-features = flakes nix-command

      - uses: cachix/cachix-action@v14
        with:
          name: forum
          extraPullNames: holochain-ci,holochain-open-dev,darksoil-studio
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Install dependencies
        run: |
          nix develop .#androidDev
          npm i
          
      - name: Build happ & webhapp
        run: nix develop --command bash -c "npm run package"

      - name: Build Android app
        run: nix develop .#androidDev --command bash -c "npm run tauri android build"
      
      - name: Get current tag
        id: get-current-tag
        uses: zingimmick/github-action-get-current-tag@v1

      - name: Publish Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: " Forum ${{steps.get-current-tag.outputs.tag}}"
          files: |
            src-tauri/gen/android/app/build/outputs/apk/universal/release/*.apk
            src-tauri/gen/android/app/build/outputs/bundle/universalRelease/*.aab
            workdir/*.happ
            workdir/*.webhapp